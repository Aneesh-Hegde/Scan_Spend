/**
 * @fileoverview gRPC-Web generated client stub for balance
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: balance.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as balance_pb from './balance_pb'; // proto import: "balance.proto"


export class BalanceServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetBalances = new grpcWeb.MethodDescriptor(
    '/balance.BalanceService/GetBalances',
    grpcWeb.MethodType.UNARY,
    balance_pb.GetBalanceRequest,
    balance_pb.GetBalanceResponse,
    (request: balance_pb.GetBalanceRequest) => {
      return request.serializeBinary();
    },
    balance_pb.GetBalanceResponse.deserializeBinary
  );

  getBalances(
    request: balance_pb.GetBalanceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<balance_pb.GetBalanceResponse>;

  getBalances(
    request: balance_pb.GetBalanceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: balance_pb.GetBalanceResponse) => void): grpcWeb.ClientReadableStream<balance_pb.GetBalanceResponse>;

  getBalances(
    request: balance_pb.GetBalanceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: balance_pb.GetBalanceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/balance.BalanceService/GetBalances',
        request,
        metadata || {},
        this.methodDescriptorGetBalances,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/balance.BalanceService/GetBalances',
    request,
    metadata || {},
    this.methodDescriptorGetBalances);
  }

  methodDescriptorAddBalanceSource = new grpcWeb.MethodDescriptor(
    '/balance.BalanceService/AddBalanceSource',
    grpcWeb.MethodType.UNARY,
    balance_pb.AddBalanceSourceRequest,
    balance_pb.AddBalanceSourceResponse,
    (request: balance_pb.AddBalanceSourceRequest) => {
      return request.serializeBinary();
    },
    balance_pb.AddBalanceSourceResponse.deserializeBinary
  );

  addBalanceSource(
    request: balance_pb.AddBalanceSourceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<balance_pb.AddBalanceSourceResponse>;

  addBalanceSource(
    request: balance_pb.AddBalanceSourceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: balance_pb.AddBalanceSourceResponse) => void): grpcWeb.ClientReadableStream<balance_pb.AddBalanceSourceResponse>;

  addBalanceSource(
    request: balance_pb.AddBalanceSourceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: balance_pb.AddBalanceSourceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/balance.BalanceService/AddBalanceSource',
        request,
        metadata || {},
        this.methodDescriptorAddBalanceSource,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/balance.BalanceService/AddBalanceSource',
    request,
    metadata || {},
    this.methodDescriptorAddBalanceSource);
  }

  methodDescriptorUpdateBalance = new grpcWeb.MethodDescriptor(
    '/balance.BalanceService/UpdateBalance',
    grpcWeb.MethodType.UNARY,
    balance_pb.UpdateBalanceRequest,
    balance_pb.UpdateBalanceResponse,
    (request: balance_pb.UpdateBalanceRequest) => {
      return request.serializeBinary();
    },
    balance_pb.UpdateBalanceResponse.deserializeBinary
  );

  updateBalance(
    request: balance_pb.UpdateBalanceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<balance_pb.UpdateBalanceResponse>;

  updateBalance(
    request: balance_pb.UpdateBalanceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: balance_pb.UpdateBalanceResponse) => void): grpcWeb.ClientReadableStream<balance_pb.UpdateBalanceResponse>;

  updateBalance(
    request: balance_pb.UpdateBalanceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: balance_pb.UpdateBalanceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/balance.BalanceService/UpdateBalance',
        request,
        metadata || {},
        this.methodDescriptorUpdateBalance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/balance.BalanceService/UpdateBalance',
    request,
    metadata || {},
    this.methodDescriptorUpdateBalance);
  }

}

